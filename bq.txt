
import subprocess
import json

def invoke_curl_and_save_json(curl_command, output_file='result.json'):
    try:
        # Execute the curl command using subprocess and capture the output
        result = subprocess.run(curl_command, shell=True, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        # Decode the result to get the raw JSON string (stdout)
        raw_json = result.stdout.decode('utf-8')
        
        # Convert the raw JSON string into a Python dictionary
        json_data = json.loads(raw_json)
        
        # Save the JSON data into a file
        with open(output_file, 'w') as json_file:
            json.dump(json_data, json_file, indent=4)
        
        print(f"Output saved to {output_file}")
        return json_data
    
    except subprocess.CalledProcessError as e:
        print(f"Error executing curl command: {e.stderr.decode('utf-8')}")
        return None
    except json.JSONDecodeError:
        print("Failed to decode JSON from the response. Please check if the response is in valid JSON format.")
        return None

# Example usage with triple quotes to handle double quotes inside the curl command
curl_command = '''
curl -X POST https://api.example.com/data \
-H "Authorization: Bearer YOUR_TOKEN" \
-H "Content-Type: application/json" \
-d '{"name": "John", "age": 30, "city": "New York"}'
'''

# Invoke the curl command and save the result to 'result.json'
data = invoke_curl_and_save_json(curl_command)

# Optionally, print the data
if data:
    print(data)
